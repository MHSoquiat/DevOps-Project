# Basic pipeline structure
stages:
  - build
  - release
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

build-frontend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "Building frontend ..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA app/frontend
    - docker push $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA
  rules:
    - changes:
      - app/frontend/**/*

release-frontend:
  stage: release
  image: node:18
  before_script:
    - npm install -g semantic-release @semantic-release/git @semantic-release/commit-analyzer @semantic-release/release-notes-generator
  script:
    - cd app/frontend
    - VERSION=$(npx semantic-release --branches main --tag-format 'frontend-v${version}') | grep -oP '(?<=frontend-v)[0-9]+\.[0-9]+\.[0-9]+')
    - echo "Released frontend image version $VERSION"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/frontend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/frontend:$VERSION
    - docker push $CI_REGISTRY_IMAGE/frontend:$VERSION


build-backend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "Building backend ..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA app/backend
    - docker push $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA
  rules:
    - changes:
      - app/backend/**/*

release-backend:
  stage: release
  image: node:18
  before_script:
    - npm install -g semantic-release @semantic-release/git @semantic-release/commit-analyzer @semantic-release/release-notes-generator
  script:
    - cd app/backend
    - VERSION=$(npx semantic-release --branches main --tag-format 'backend-v${version}' | grep -oP '(?<=backend-v)[0-9]+\.[0-9]+\.[0-9]+')
    - echo "Released backend version $VERSION"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/backend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/backend:$VERSION
    - docker push $CI_REGISTRY_IMAGE/backend:$VERSION
  rules:
    - changes:
      - app/backend/**/*

deploy-dev:
  stage: deploy
  script:
    - echo "Deploy using Helm repo..."
    - git clone https://oauth2:${CI_JOB_TOKEN}@gitlab.com/YOUR_GROUP/helm-charts.git
    - helm upgrade --install myapp ./helm-charts/app -f ./helm-charts/app/values-dev.yaml
  environment:
    name: development
  when: manual
  only:
    - develop