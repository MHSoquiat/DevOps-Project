stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

# ----------------- FRONTEND -----------------
build-frontend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd app/frontend
    - VERSION=$(echo $CI_COMMIT_SHA | cut -c1-5)
    - echo "Building frontend version $VERSION ..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/frontend:$VERSION .
    - docker push $CI_REGISTRY_IMAGE/frontend:$VERSION
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - app/frontend/**/*

# ----------------- BACKEND -----------------
build-backend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd app/backend
    - VERSION=$(echo $CI_COMMIT_SHA | cut -c1-5)
    - echo "Building backend version $VERSION ..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/backend:$VERSION .
    - docker push $CI_REGISTRY_IMAGE/backend:$VERSION
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - app/backend/**/*

# ----------------- DEPLOY -----------------
deploy-dev:
  stage: deploy
  image: mikefarah/yq:4
  needs:
    - job: build-frontend
      optional: true
    - job: build-backend
      optional: true
  rules:
    - changes:
        - app/frontend/**/*
        - app/backend/**/*
  script:
    - echo "Updating Helm Values"

    - VERSION=$(echo $CI_COMMIT_SHA | cut -c1-5)
    - echo "Using image tag $VERSION"

    - git clone https://oauth2:${CI_JOB_TOKEN}@gitlab.com/sokii1/helm-charts.git
    - cd helm-charts/task-app

    - CHANGED_FILES=$(git diff-tree --no-commit-id --name-only -r $CI_COMMIT_SHA)
    - echo "Changed files $CHANGED_FILES"

    - if echo "$CHANGED_FILES" | grep -q "^app/frontend/"; then
        echo "Frontend changed — updating frontend image tag...";
        yq e -i ".frontend.image.tag = \"$VERSION\"" values.yaml;
      else
        echo "Frontend unchanged — keeping existing tag.";
      fi

    - if echo "$CHANGED_FILES" | grep -q "^app/backend/"; then
        echo "Backend changed — updating backend image tag...";
        yq e -i ".backend.image.tag = \"$VERSION\"" values.yaml;
      else
        echo "Backend unchanged — keeping existing tag.";
      fi

    - if ! git diff --quiet; then
        echo "Detected changes in values.yaml — committing and pushing...";
        git config user.name "gitlab-ci";
        git config user.email "gitlab-ci@example.com";
        git add values.yaml;
        git commit -m "Update image tags to $VERSION";
        git push origin main;
      else
        echo "No image tag changes detected — skipping commit and deploy.";
      fi

