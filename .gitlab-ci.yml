stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""

# ----------------- FRONTEND -----------------
build-frontend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd app/frontend
    - VERSION=$(echo $CI_COMMIT_SHA | cut -c1-5)
    - echo "Building frontend version $VERSION ..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/frontend:$VERSION .
    - docker push $CI_REGISTRY_IMAGE/frontend:$VERSION
  artifacts:
    reports:
      dotenv: frontend.env
  after_script:
    - echo "FRONTEND_BUILT=true" >> frontend.env
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - app/frontend/**/*

# ----------------- BACKEND -----------------
build-backend:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd app/backend
    - VERSION=$(echo $CI_COMMIT_SHA | cut -c1-5)
    - echo "Building backend version $VERSION ..."
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE/backend:$VERSION .
    - docker push $CI_REGISTRY_IMAGE/backend:$VERSION
  artifacts:
    reports:
      dotenv: backend.env
  after_script:
    - echo "BACKEND_BUILT=true" >> backend.env
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - app/backend/**/*

# ----------------- DEPLOY -----------------
deploy-dev:
  stage: deploy
  image: alpine:3.20
  needs:
    - job: build-frontend
      optional: true
      artifacts: true
    - job: build-backend
      optional: true
      artifacts: true
  script:
    - apk add --no-cache git yq helm
    - VERSION=${CI_COMMIT_SHA:0:5}
    - echo "Using tag $VERSION"

    - git clone https://${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD}@gitlab.com/sokii1/helm-charts.git
    - cd helm-charts/task-app

    # Update frontend tag only if frontend was built
    - if [ "$FRONTEND_BUILT" = "true" ]; then
        echo "Frontend changed — updating tag...";
        yq e -i ".frontend.image.tag = \"${VERSION}\"" values.yaml;
      else
        echo "Frontend unchanged — keeping existing tag.";
      fi

    # Update backend tag only if backend was built
    - if [ "$BACKEND_BUILT" = "true" ]; then
        echo "Backend changed — updating tag...";
        yq e -i ".backend.image.tag = \"${VERSION}\"" values.yaml;
      else
        echo "Backend unchanged — keeping existing tag.";
      fi

    # Commit only if there are actual tag changes
    - if ! git diff --quiet; then
        echo "Detected image tag changes — committing and pushing...";
        git config user.email "$GITLAB_USER_EMAIL";
        git config user.name "$GITLAB_USER_NAME";
        git add values.yaml;
        git commit -m "chore update image tags to $VERSION [skip ci]" || echo "No changes to commit";
        git push origin main;
      else
        echo "No changes detected — skipping commit.";
      fi
